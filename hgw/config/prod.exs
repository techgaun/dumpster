use Mix.Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# HubGateway.Web.Endpoint.load_from_system_env/1 dynamically.
# Any dynamic configuration should be moved to such function.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.

https = case System.get_env("SSL") do
  "true" ->
    [
      :inet6,
      port: System.get_env("SSL_PORT") || 443,
      keyfile: "/etc/letsencrypt/live/stage-gateway.casa.iq/privkey.pem",
      certfile: "/etc/letsencrypt/live/stage-gateway.casa.iq/cert.pem",
      cacertfile: "/etc/letsencrypt/live/stage-gateway.casa.iq/chain.pem",
      versions: [:"tlsv1.2", :"tlsv1.1", :"tlsv1"],
      ciphers: [
        'ECDHE-ECDSA-AES256-GCM-SHA384', 'ECDHE-RSA-AES256-GCM-SHA384',
        'ECDHE-ECDSA-AES256-SHA384', 'ECDHE-RSA-AES256-SHA384',  'ECDHE-ECDSA-DES-CBC3-SHA',
        'ECDH-ECDSA-AES256-GCM-SHA384', 'ECDH-RSA-AES256-GCM-SHA384', 'ECDH-ECDSA-AES256-SHA384',
        'ECDH-RSA-AES256-SHA384', 'DHE-DSS-AES256-GCM-SHA384', 'DHE-DSS-AES256-SHA256',
        'AES256-GCM-SHA384', 'AES256-SHA256', 'ECDHE-ECDSA-AES128-GCM-SHA256',
        'ECDHE-RSA-AES128-GCM-SHA256', 'ECDHE-ECDSA-AES128-SHA256', 'ECDHE-RSA-AES128-SHA256',
        'ECDH-ECDSA-AES128-GCM-SHA256', 'ECDH-RSA-AES128-GCM-SHA256', 'ECDH-ECDSA-AES128-SHA256',
        'ECDH-RSA-AES128-SHA256', 'DHE-DSS-AES128-GCM-SHA256', 'DHE-DSS-AES128-SHA256',
        'AES128-GCM-SHA256', 'AES128-SHA256', 'ECDHE-ECDSA-AES256-SHA',
        'ECDHE-RSA-AES256-SHA', 'DHE-DSS-AES256-SHA', 'ECDH-ECDSA-AES256-SHA',
        'ECDH-RSA-AES256-SHA', 'AES256-SHA', 'ECDHE-ECDSA-AES128-SHA',
        'ECDHE-RSA-AES128-SHA', 'DHE-DSS-AES128-SHA', 'ECDH-ECDSA-AES128-SHA',
        'ECDH-RSA-AES128-SHA', 'AES128-SHA'
      ],
      secure_renegotiate: true,
      reuse_sessions: true,
      honor_cipher_order: true,
      client_renegotiation: false,
      eccs: [
        :sect571r1, :sect571k1, :secp521r1, :brainpoolP512r1, :sect409k1,
        :sect409r1, :brainpoolP384r1, :secp384r1, :sect283k1, :sect283r1,
        :brainpoolP256r1, :secp256k1, :secp256r1, :sect239k1, :sect233k1,
        :sect233r1, :secp224k1, :secp224r1
      ]
    ]

  _ ->
    nil
end

config :hub_gateway, HubGateway.Web.Endpoint,
  secret_key_base: System.get_env("SECRET_KEY_BASE"),
  on_init: {HubGateway.Web.Endpoint, :load_from_system_env, []},
  url: [host: "stage-gateway.casa.iq", port: 80],
  cache_static_manifest: "priv/static/cache_manifest.json",
  server: true,
  root: ".",
  version: Mix.Project.config[:version],
  check_origin: ["//localhost:4000", "//stage-gateway.casa.iq"],
  force_ssl: [hsts: true],
  https: https

# Do not print debug messages in production
config :logger, level: :info

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :hub_gateway, HubGateway.Web.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [:inet6,
#               port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :hub_gateway, HubGateway.Web.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :hub_gateway, HubGateway.Web.Endpoint, server: true
#

# Finally import the config/prod.secret.exs
# which should be versioned separately.
# import_config "prod.secret.exs"
